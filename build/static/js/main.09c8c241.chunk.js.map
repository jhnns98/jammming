{"version":3,"sources":["Components/App/logo.svg","util/Spotify.js","Components/SearchBar/searchBar.js","Components/Track/track.js","Components/TrackList/trackList.js","Components/SearchResults/searchResults.js","Components/Playlist/playlist.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","accessToken","SearchBar","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","search","bind","assertThisInitialized","handleTermChange","inherits","createClass","key","value","event","setState","term","target","onSearch","state","react_default","a","createElement","className","placeholder","onChange","onClick","React","Component","Track","addTrack","removeTrack","onAdd","track","onRemove","isRemoval","name","artist","album","renderAction","TrackList","apply","arguments","tracks","map","track_Track","id","SearchResults","trackList_TrackList","searchResults","Playlist","handleNameChange","onNameChange","playlistName","playlistTracks","onSave","Spotify","getAccessToken","accessTokenMatches","window","location","href","match","tokenExpiresMatch","tokenExpires","Number","setTimeout","history","pushState","userRedirect","concat","fetch","headers","Authorization","then","response","json","jsonResponse","items","artists","uri","console","log","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris","App","updatePlaylistName","_this2","info","find","savedTrack","push","filter","playlistTrack","trackURIs","forEach","searchBar_SearchBar","searchResults_SearchResults","playlist_Playlist","Boolean","hostname","ReactDOM","render","Components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09c8c241.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","let clientId = '3d9d154962884d8fb22eb244782faf67';\nlet redirectURI = 'http://johannes_super_jammming.surge.sh';\n\nlet accessToken;\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n\n    const accessTokenMatches = window.location.href.match(/access_token=([^&]*)/);\n    const tokenExpiresMatch = window.location.href.match(/expires_in=([^&]*)/);\n    if (accessTokenMatches && tokenExpiresMatch) {\n      accessToken = accessTokenMatches[1];\n      const tokenExpires = Number(tokenExpiresMatch[1]);\n      window.setTimeout(() => accessToken = '', tokenExpires * 1000);\n      window.history.pushState('Access Token', null, '/');\n      return accessToken;\n    } else {\n      const userRedirect = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`;\n      window.location = userRedirect;\n    }\n  },\n\n  search(term) {\n    let accessToken = this.getAccessToken();\n    if (!accessToken) {\n      console.log('No accessToken!');\n      return;\n    };\n\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n    headers: {Authorization: `Bearer ${accessToken}`}\n    }).then(response => { return response.json()\n    }).then(jsonResponse => {\n        if (!jsonResponse.tracks) {\n          return [];\n        }\n        return jsonResponse.tracks.items.map(track => ({\n            id: track.id,\n            name: track.name,\n            artist: track.artists[0].name,\n            album: track.album.name,\n            uri: track.uri\n        }));\n    });\n  },\n\nsavePlaylist(name, trackUris) {\n    if (!name || !trackUris.length) {\n      return;\n    }\n\n    const accessToken = Spotify.getAccessToken();\n    const headers = { Authorization: `Bearer ${accessToken}` };\n    let userId;\n\n    return fetch('https://api.spotify.com/v1/me', {headers: headers}\n    ).then(response => response.json()\n    ).then(jsonResponse => {\n      userId = jsonResponse.id;\n      return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        headers: headers,\n        method: 'POST',\n        body: JSON.stringify({name: name})\n      }).then(response => response.json()\n      ).then(jsonResponse => {\n        const playlistId = jsonResponse.id;\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\n          headers: headers,\n          method: 'POST',\n          body: JSON.stringify({uris: trackUris})\n        });\n      });\n    });\n  }\n}\n\nexport default Spotify;\n","import React from 'react';\nimport './searchBar.css';\n\nexport class SearchBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.search = this.search.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n  }\n\n  handleTermChange(event) {\n    this.setState({ term: event.target.value });\n  }\n\n  search() {\n    this.props.onSearch(this.state.term);\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <input placeholder=\"Enter A Song, Album, or Artist\" onChange={this.handleTermChange}/>\n        <button className=\"SearchButton\" onClick={this.search}>SEARCH</button>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport './track.css';\n\nexport class Track extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.addTrack =  this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n  }\n\n\n  addTrack(event) {\n    this.props.onAdd(this.props.track);\n  }\n\n  removeTrack(event) {\n    this.props.onRemove(this.props.track);\n}\n\n  renderAction() {\n    if (this.props.isRemoval === true) {\n      return <button className=\"Track-action\" onClick={this.removeTrack}>-</button>\n    } else {\n      return <button className=\"Track-action\" onClick={this.addTrack}>+</button>\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          <h3>{this.props.track.name}</h3>\n          <p> {this.props.track.artist} | {this.props.track.album}</p>\n        </div>\n        {this.renderAction()}\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Track } from './../Track/track.js'\nimport './trackList.css';\n\nexport class TrackList extends React.Component {\n  render() {\n    return (\n      <div className=\"TrackList\">\n        {this.props.tracks.map(track => {\n            return (\n              <Track key={track.id} track={track} onAdd={this.props.onAdd} onRemove={this.props.onRemove} isRemoval={this.props.isRemoval}/>\n            );\n          }\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {  TrackList } from './../TrackList/trackList.js';\nimport './searchResults.css'\n\nexport class SearchResults extends React.Component {\n\n  render() {\n    return (\n      <div className=\"SearchResults\">\n        <h2>Results</h2>\n        <TrackList tracks={this.props.searchResults} onAdd={this.props.onAdd} isRemoval={false}/>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {  TrackList } from './../TrackList/trackList.js';\nimport './playlist.css';\n\nexport class Playlist extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n\n  handleNameChange(event) {\n    this.props.onNameChange(event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"Playlist\">\n        <input value={this.props.playlistName} onChange={this.handleNameChange}/>\n        <TrackList tracks={this.props.playlistTracks} onRemove={this.props.onRemove} isRemoval={true}/>\n        <button className=\"Playlist-save\" onClick={this.props.onSave}>SAVE TO SPOTIFY</button>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { SearchBar } from './../SearchBar/searchBar.js';\nimport { SearchResults } from './../SearchResults/searchResults.js';\nimport { Playlist } from './../Playlist/playlist.js';\nimport Spotify from './../../util/Spotify.js'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n    playlistName: 'New Playlist',\n    playlistTracks: []\n    };\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n\n  }\n\n  // error here\n  search(term) {\n    Spotify.search(term).then(info => {\n      this.setState({searchResults: info});\n    });\n  }\n\n  // adding a song from the search results track list to the user’s custom playlist. The user can trigger the .addTrack() method by clicking the + sign from the search results list.\n  addTrack(track) {\n    let tracks = this.state.playlistTracks\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    } else {\n      tracks.push(track);\n    }\n\n    this.setState({ playlistTracks: tracks});\n  }\n\n  // removes a song from a user’s custom playlist when the user selects the - sign inside of a rendered track.\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks\n    tracks = tracks.filter(playlistTrack => playlistTrack.id !== track.id);\n\n    this.setState({ playlistTracks: tracks});\n  }\n\n  // hange the name of their playlist, and save the updated value to the App component’s state\n  updatePlaylistName(name) {\n    this.setState({playlistName: name});\n  }\n\n  // tave the playlist\n    savePlaylist() {\n\n      //const trackURIs = this.state.playlistTracks.map(track => track.uri);\n\n      let trackURIs = [];\n      this.state.playlistTracks.forEach(playlistTrack => {\n        trackURIs.push(playlistTrack.uri);\n      });\n      Spotify.savePlaylist(\n        this.state.playlistName, trackURIs\n      );\n      this.setState({\n        playlistTracks:[],\n        playlistName: 'New Playlist',\n        searchResults:[]\n      });\n    }\n\n\n  render () {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n          <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack}/>\n          <Playlist playlistName={this.state.playlistName} playlistTracks={this.state.playlistTracks} onRemove={this.removeTrack} onNameChange={this.updatePlaylistName} onSave={this.savePlaylist}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}